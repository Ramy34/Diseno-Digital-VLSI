library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity TX is
	port( Clk : IN STD_LOGIC;
			 SW : IN STD_LOGIC_VECTOR(3 downto 0);
			LED : OUT STD_LOGIC;
	  TX_WIRE : OUT STD_LOGIC);
end entity;
architecture behaivoral OF TX IS
signal conta : INTEGER := 0;
signal valor : INTEGER := 70000;
signal INICIO: STD_LOGIC;
signal dato : STD_LOGIC_VECTOR(7 DOWNTO 0);
signal PRE : INTEGER RANGE 0 TO 5208 := 0;
signal INDICE: INTEGER RANGE 0 TO 9 := 0;
signal BUFF : STD_LOGIC_VECTOR(9 DOWNTO 0);
signal Flag : STD_LOGIC := '0';
signal PRE_val: INTEGER range 0 to 41600;
signal baud : STD_LOGIC_VECTOR(2 DOWNTO 0);
signal i : INTEGER range 0 to 4;
signal pulso : STD_LOGIC:='0';
signal conta2: integer range 0 to 49999999 := 0;
signal dato_bin: STD_LOGIC_VECTOR(3 DOWNTO 0);
signal hex_val: STD_LOGIC_VECTOR(7 DOWNTO 0):= (others => '0');
begin
	TX_divisor : process(Clk)
	begin
		if rising_edge(Clk) then
			contador<=contador+1;
			if (contador < 140000) then
				pulso <= '1';
			else
				pulso <= '0';
			end if;
		end if;
	end process TX_divisor;
	
	TX_prepara : process(Clk, pulso)
	type arreglo is array (0 to 1) of STD_LOGIC_VECTOR(7 downto 0);
	variable asc_dato : arreglo := (X"30",X"0A");
	begin
		asc_dato(0):=hex_val;
		if (pulso='1') then
			if rising_edge(Clk) then
				if (conta=valor) then
					conta <= 0;
					INICIO <= '1';
					Dato <= asc_dato(i)
					if (i = 1) then
						i <= 0;
					else
						i <= i + 1;
					end if;
				else
					conta <= conta+1;
					INICIO <= '0';
				end if;
			end if;
		end if;
	end process TX_prepara;









